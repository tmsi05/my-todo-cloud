    #dist: trusty
    dist: xenial
    sudo: required
    services:
      - docker
     

   # env:
   #   - CHROME_BIN=/usr/bin/google-chrome

    # Get Google Chrome headless browser for Angular tests
    # Install latest Docker CE so we can use Dockerfile outside build context
    addons:
      chrome: stable
      apt:
        packages:
          - docker-ce

    # Install any dependencies, update Docker Compose to 1.23.2 so we can use Dockerfile outside build context
    before_install:
#     - google-chrome-stable --headless --disable-gpu &
     - which google-chrome-stable
     - which google-chrome 
     - docker --version
     - docker-compose --version
     - sudo rm /usr/local/bin/docker-compose
     - curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` > docker-compose
     - chmod +x docker-compose
     - sudo mv docker-compose /usr/local/bin
     - docker-compose --version
     - google-chrome-stable --headless --disable-gpu --remote-debugging-port=9222 http://localhost &
     
    #install:
     
    # Build development images for test
    before_script:
      - docker build ./todo-view -f ./todo-view/Dockerfile.dev -t tmsi05/todo-view-test
      - docker build ./todo-cache-service -f Dockerfile.nodejs.dev -t tmsi05/todo-cache-service-test
     
    # Run some tests
    script:
#      - docker run tmsi05/todo-view-test npm run test
#      - docker run tmsi05/todo-view-test npm test -- --watch=false --no-progress --browsers=ChromeHeadless
      - docker run tmsi05/todo-view-test npm test -- --watch=false --no-progress --browsers=ChromeHeadlessNoSandbox
      - docker run tmsi05/todo-cache-service-test npm test
     
    after_success:
      # Build Production Images for deployment
      - docker-compose -f docker-compose.yml -f docker-compose.prod.yml build
     
      # Login to Docker Hub
      - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_ID" --password-stdin
     
      # Take the built production images and push to Docker Hub
      - docker-compose -f docker-compose.yml -f docker-compose.prod.yml push

    deploy:
      provider: elasticbeanstalk
      region: us-east-2
      app: Todo Application
      env: Todoapplication-env
      bucket_name: elasticbeanstalk-us-east-2-205592565542
      bucket_path: todo-app
      on:
        branch: master
      access_key_id: $AWS_ACCESS_KEY
      secret_access_key: $AWS_SECRET_KEY
    #    secure: $AWS_SECRET_KEY

 